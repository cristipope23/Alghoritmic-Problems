#include<bits/stdc++.h>
#define maxn 100005
using namespace std;

ifstream fin("test.in");
ofstream fout("test.out");

int n,m;
vector < int > G[maxn];
queue <int> q;
int viz[maxn]={0};

bool conex(int x)
{
    int node,nr=1;

    viz[x]=1;
    q.push(x);

    while(!q.empty())
    {
        node=q.front();
        q.pop();
        for(int i=0;i<G[node].size();i++)
        {
            if(viz[G[node][i]]==0)
            {
                nr++;
                viz[G[node][i]]=1;
                q.push(G[node][i]);
            }
        }
    }
    if(nr==n)
        return true;
    return false;
}

void bfs(int x)
{
    cout<<x<<" ";
    int node;
    q.push(x);
    viz[x]=1;

    while(!q.empty())
    {
        node=q.front();
        q.pop();

        for(int i=0;i<G[node].size();i++)
        {
            if(viz[G[node][i]]==0)
            {
                cout<<G[node][i]<<" ";
                viz[G[node][i]]=1;
                q.push(G[node][i]);
            }
        }
    }
    cout<<"\n";
}

void citire()
{
    fin>>n>>m;
    for(int i=1;i<=m;i++)
    {
        int x,y;
        fin>>x>>y;
        G[x].push_back(y);
        G[y].push_back(x);
    }
    for(int i=1;i<=m;i++)
    {

    }
}



int main()
{
    citire();
    return 0;
}
